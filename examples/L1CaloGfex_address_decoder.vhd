-- Automatically generated by WhishList - https://github.com/mvsoliveira/wishlist/
-- Package name: L1CaloGfex_pkg
-- Description : IPbus address table for the L1Calo gFEX zynq FPGA

library ieee;
use ieee.std_logic_1164.all;
library work;
use work.L1CaloGfex_pkg.all;

entity L1CaloGfex_address_decoder is
port(
    clk_i : in std_logic;
    read_i : in std_logic;
    write_i : in std_logic;
    address_i : in std_logic_vector(31 downto 0);
    data_i : in std_logic_vector(31 downto 0);
    data_o : out std_logic_vector(31 downto 0);
    L1CaloGfex_status_i : in L1CaloGfex_status_record_type;
    L1CaloGfex_control_o : out L1CaloGfex_control_record_type

);
end entity L1CaloGfex_address_decoder;


architecture rtl of L1CaloGfex_address_decoder is

signal int_L1CaloGfex_control : L1CaloGfex_control_record_type;
signal int_L1CaloGfex_status : L1CaloGfex_status_record_type;

begin

L1CaloGfex_control_o <= int_L1CaloGfex_control;
int_L1CaloGfex_status <= L1CaloGfex_status_i;

address_decoder_p : process (clk_i) is
begin
    if rising_edge(clk_i) then
        if (read_i = '1') then
            case address_i is
                when X"A0010000" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.ctest_reg(31 downto 0);
                when X"A001000C" =>
                    data_o(17 downto 9) <= int_l1calogfex_control.n_bcrd_ctrl.glbl_lnks(8 downto 0);
                    data_o(8 downto 0) <= int_l1calogfex_control.n_bcrd_ctrl.jet_lnks(8 downto 0);
                    data_o(28 downto 18) <= int_l1calogfex_control.n_bcrd_ctrl.twr_lnks(10 downto 0);
                    data_o(29) <= int_l1calogfex_status.n_bcrd_ctrl.twr_lnks_read;
                when X"A0010010" =>
                    data_o(1) <= int_l1calogfex_control.gbt_ctrl.sync;
                    data_o(2) <= int_l1calogfex_control.gbt_ctrl.rst;
                when X"A0010014" =>
                    data_o(7 downto 0) <= int_l1calogfex_control.ecr_ctrl.value(7 downto 0);
                    data_o(28) <= int_l1calogfex_control.ecr_ctrl.clear;
                    data_o(29) <= int_l1calogfex_control.ecr_ctrl.update;
                when X"A0010020" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.aipb_tx_ctrl(31 downto 0);
                when X"A0010024" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.aipb_tx_data(31 downto 0);
                when X"A0010028" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.bipb_tx_ctrl(31 downto 0);
                when X"A001002C" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.bipb_tx_data(31 downto 0);
                when X"A0010030" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.cipb_tx_ctrl(31 downto 0);
                when X"A0010034" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.cipb_tx_data(31 downto 0);
                when X"A0010038" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.aipb_rx_ctrl(31 downto 0);
                when X"A001003C" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.bipb_rx_ctrl(31 downto 0);
                when X"A0010040" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.cipb_rx_ctrl(31 downto 0);
                when X"A0010044" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.zipb_tx_ctrl(31 downto 0);
                when X"A0010048" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.zipb_tx_data(31 downto 0);
                when X"A001004C" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.zipb_rx_ctrl(31 downto 0);
                when X"A0010100" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.date_time(31 downto 0);
                when X"A0010104" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.git_hash(31 downto 0);
                when X"A0010108" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.fw_ver_code(31 downto 0);
                when X"A0010110" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.aipb_tx_stat(31 downto 0);
                when X"A0010114" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.bipb_tx_stat(31 downto 0);
                when X"A0010118" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.cipb_tx_stat(31 downto 0);
                when X"A001011C" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.aipb_rx_stat(31 downto 0);
                when X"A0010120" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.aipb_rx_data(31 downto 0);
                when X"A0010124" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.bipb_rx_stat(31 downto 0);
                when X"A0010128" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.bipb_rx_data(31 downto 0);
                when X"A001012C" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.cipb_rx_stat(31 downto 0);
                when X"A0010130" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.cipb_rx_data(31 downto 0);
                when X"A0010140" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.zipb_tx_stat(31 downto 0);
                when X"A0010144" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.zipb_rx_stat(31 downto 0);
                when X"A0010148" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.zipb_rx_data(31 downto 0);
                when X"A001014C" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.init_stat(31 downto 0);
                when X"A0010150" =>
                    data_o(31 downto 0) <= int_l1calogfex_status.test.init_stat_r(49 downto 18);
                when X"A0010154" =>
                    data_o(31 downto 14) <= int_l1calogfex_status.test.init_stat_r(17 downto 0);
                when X"A0010158" =>
                    data_o(31 downto 0) <= int_l1calogfex_control.test.init_stat_rw(39 downto 8);
                when X"A001015C" =>
                    data_o(31 downto 24) <= int_l1calogfex_control.test.init_stat_rw(7 downto 0);
                when others => null;
            end case;
        end if;
        if (write_i = '1') then
            case address_i is
                when X"A001000C" =>
                    int_l1calogfex_status.n_bcrd_ctrl.twr_lnks_read <= data_i(29);
                when X"A0010100" =>
                    int_l1calogfex_status.date_time(31 downto 0) <= data_i(31 downto 0);
                when X"A0010104" =>
                    int_l1calogfex_status.git_hash(31 downto 0) <= data_i(31 downto 0);
                when X"A0010108" =>
                    int_l1calogfex_status.fw_ver_code(31 downto 0) <= data_i(31 downto 0);
                when X"A0010110" =>
                    int_l1calogfex_status.aipb_tx_stat(31 downto 0) <= data_i(31 downto 0);
                when X"A0010114" =>
                    int_l1calogfex_status.bipb_tx_stat(31 downto 0) <= data_i(31 downto 0);
                when X"A0010118" =>
                    int_l1calogfex_status.cipb_tx_stat(31 downto 0) <= data_i(31 downto 0);
                when X"A001011C" =>
                    int_l1calogfex_status.aipb_rx_stat(31 downto 0) <= data_i(31 downto 0);
                when X"A0010120" =>
                    int_l1calogfex_status.aipb_rx_data(31 downto 0) <= data_i(31 downto 0);
                when X"A0010124" =>
                    int_l1calogfex_status.bipb_rx_stat(31 downto 0) <= data_i(31 downto 0);
                when X"A0010128" =>
                    int_l1calogfex_status.bipb_rx_data(31 downto 0) <= data_i(31 downto 0);
                when X"A001012C" =>
                    int_l1calogfex_status.cipb_rx_stat(31 downto 0) <= data_i(31 downto 0);
                when X"A0010130" =>
                    int_l1calogfex_status.cipb_rx_data(31 downto 0) <= data_i(31 downto 0);
                when X"A0010140" =>
                    int_l1calogfex_status.zipb_tx_stat(31 downto 0) <= data_i(31 downto 0);
                when X"A0010144" =>
                    int_l1calogfex_status.zipb_rx_stat(31 downto 0) <= data_i(31 downto 0);
                when X"A0010148" =>
                    int_l1calogfex_status.zipb_rx_data(31 downto 0) <= data_i(31 downto 0);
                when X"A001014C" =>
                    int_l1calogfex_status.init_stat(31 downto 0) <= data_i(31 downto 0);
                when X"A0010150" =>
                    int_l1calogfex_status.test.init_stat_r(49 downto 18) <= data_i(31 downto 0);
                when X"A0010154" =>
                    int_l1calogfex_status.test.init_stat_r(17 downto 0) <= data_i(31 downto 14);
                when others => null;
            end case;
        end if;
    end if;
end process address_decoder_p;

end architecture rtl;